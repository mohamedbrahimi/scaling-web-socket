export interface MessageConstructorInterface {
    new (): MessageInterface,
    createFromMessage(message: MessageInterface|string, reset: boolean): MessageInterface,
}

export enum MessageProperty {
    PROPERTY_TTL = 'ttl',
    PROPERTY_RETRY_THRESHOLD = 'retryThreshold',
    PROPERTY_RETRY_DELAY = 'retryDelay',
    PROPERTY_CONSUME_TIMEOUT = 'consumeTimeout',
    PROPERTY_BODY = 'body',
    PROPERTY_UUID = 'uuid',
    PROPERTY_ATTEMPTS = 'attempts',
    PROPERTY_CREATED_AT = 'createdAt',
    PROPERTY_SCHEDULED_CRON = 'scheduledCron',
    PROPERTY_SCHEDULED_CRON_FIRED = 'scheduledCronFired',
    PROPERTY_SCHEDULED_DELAY = 'scheduledDelay',
    PROPERTY_SCHEDULED_PERIOD = 'scheduledPeriod',
    PROPERTY_SCHEDULED_REPEAT = 'scheduledRepeat',
    PROPERTY_SCHEDULED_REPEAT_COUNT = 'scheduledRepeatCount',
    PROPERTY_DELAYED = 'delayed',
}

export interface MessageInterface {
    setScheduledPeriod(period:number): MessageInterface,
    setScheduledDelay(delay:number): MessageInterface,
    setScheduledCron(cron: string): MessageInterface,
    setScheduledRepeat(repeat: number): MessageInterface,
    setTTL(ttl: number): MessageInterface,
    setConsumeTimeout(timeout: number): MessageInterface,
    setRetryThreshold(threshold: number): MessageInterface,
    setRetryDelay(delay: number): MessageInterface,
    setBody(body: any): MessageInterface,
    getBody(): any,
    getId(): string,
    getTTL(): number|null,
    getRetryThreshold(): number|null,
    getRetryDelay(): number|null,
    getConsumeTimeout(): number|null,
    getCreatedAt(): number,
    getAttempts(): number,
    getMessageScheduledRepeat(): number|null,
    getMessageScheduledRepeatCount(): number,
    getMessageScheduledPeriod(): number|null,
    getMessageScheduledCRON():string|null,
    getMessageScheduledDelay(): number|null,
    isDelayed(): boolean,
    getProperty(property: MessageProperty):any,
    toString(): string,
}